// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockHereAPI is an autogenerated mock type for the HereAPI type
type MockHereAPI struct {
	mock.Mock
}

type MockHereAPI_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHereAPI) EXPECT() *MockHereAPI_Expecter {
	return &MockHereAPI_Expecter{mock: &_m.Mock}
}

// Geocode provides a mock function with given fields:
func (_m *MockHereAPI) Geocode() (*http.Response, error) {
	ret := _m.Called()

	var r0 *http.Response
	var r1 error
	if rf, ok := ret.Get(0).(func() (*http.Response, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *http.Response); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockHereAPI_Geocode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Geocode'
type MockHereAPI_Geocode_Call struct {
	*mock.Call
}

// Geocode is a helper method to define mock.On call
func (_e *MockHereAPI_Expecter) Geocode() *MockHereAPI_Geocode_Call {
	return &MockHereAPI_Geocode_Call{Call: _e.mock.On("Geocode")}
}

func (_c *MockHereAPI_Geocode_Call) Run(run func()) *MockHereAPI_Geocode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHereAPI_Geocode_Call) Return(_a0 *http.Response, _a1 error) *MockHereAPI_Geocode_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockHereAPI_Geocode_Call) RunAndReturn(run func() (*http.Response, error)) *MockHereAPI_Geocode_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockHereAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHereAPI creates a new instance of MockHereAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHereAPI(t mockConstructorTestingTNewMockHereAPI) *MockHereAPI {
	mock := &MockHereAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
